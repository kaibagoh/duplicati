//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Duplicati.Library.Backend.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class S3Backend {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal S3Backend() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Duplicati.Library.Backend.Strings.S3Backend", typeof(S3Backend).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AWS &quot;Secret Access Key&quot; can be obtained after logging into your AWS account, this can also be supplied through the &quot;ftp-password&quot; property.
        /// </summary>
        internal static string AMZKeyDescriptionLong {
            get {
                return ResourceManager.GetString("AMZKeyDescriptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AWS &quot;Secret Access Key&quot;.
        /// </summary>
        internal static string AMZKeyDescriptionShort {
            get {
                return ResourceManager.GetString("AMZKeyDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AWS &quot;Access Key ID&quot; can be obtained after logging into your AWS account, this can also be supplied through the &quot;ftp-username&quot; property.
        /// </summary>
        internal static string AMZUserIDDescriptionLong {
            get {
                return ResourceManager.GetString("AMZUserIDDescriptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AWS &quot;Access Key ID&quot;.
        /// </summary>
        internal static string AMZUserIDDescriptionShort {
            get {
                return ResourceManager.GetString("AMZUserIDDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are using a deprected url format, please change it to: {0}.
        /// </summary>
        internal static string DeprecatedUrlFormat {
            get {
                return ResourceManager.GetString("DeprecatedUrlFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This backend can read and write data to an Amazon S3 compatible server. Allowed formats are: &quot;s3://bucketname/prefix&quot;.
        /// </summary>
        internal static string Description_v2 {
            get {
                return ResourceManager.GetString("Description_v2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username used to connect to the server. This may also be supplied as the environment variable &quot;FTP_USERNAME&quot;..
        /// </summary>
        internal static string DescriptionFTPUsernameLong {
            get {
                return ResourceManager.GetString("DescriptionFTPUsernameLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplies the username used to connect to the server.
        /// </summary>
        internal static string DescriptionFTPUsernameShort {
            get {
                return ResourceManager.GetString("DescriptionFTPUsernameShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this flag to communicate using Secure Socket Layer (SSL) over http (https). Note that bucket names containing a period has problems with SSL connections..
        /// </summary>
        internal static string DescriptionUseSSLLong {
            get {
                return ResourceManager.GetString("DescriptionUseSSLLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs Duplicati to use an SSL (https) connection.
        /// </summary>
        internal static string DescriptionUseSSLShort {
            get {
                return ResourceManager.GetString("DescriptionUseSSLShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amazon S3 based.
        /// </summary>
        internal static string DisplayName {
            get {
                return ResourceManager.GetString("DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password used to connect to the server. This may also be supplied as the environment variable &quot;FTP_PASSWORD&quot;..
        /// </summary>
        internal static string FTPPasswordDescriptionLong {
            get {
                return ResourceManager.GetString("FTPPasswordDescriptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplies the password used to connect to the server.
        /// </summary>
        internal static string FTPPasswordDescriptionShort {
            get {
                return ResourceManager.GetString("FTPPasswordDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Amazon S3 secret key given.
        /// </summary>
        internal static string NoAMZKeyError {
            get {
                return ResourceManager.GetString("NoAMZKeyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Amazon S3 userID given.
        /// </summary>
        internal static string NoAMZUserIDError {
            get {
                return ResourceManager.GetString("NoAMZUserIDError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The options --{0} and --{1} are mutually exclusive.
        /// </summary>
        internal static string OptionsAreMutuallyExclusiveError {
            get {
                return ResourceManager.GetString("OptionsAreMutuallyExclusiveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please use --{0}={1} instead.
        /// </summary>
        internal static string S3EurobucketDeprecationDescription {
            get {
                return ResourceManager.GetString("S3EurobucketDeprecationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This flag is only used when creating new buckets. If the flag is set, the bucket is created on a european server. This flag forces the &quot;s3-use-new-style&quot; flag. Amazon charges slightly more for european buckets..
        /// </summary>
        internal static string S3EurobucketDescriptionLong {
            get {
                return ResourceManager.GetString("S3EurobucketDescriptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a European server.
        /// </summary>
        internal static string S3EurobucketDescriptionShort {
            get {
                return ResourceManager.GetString("S3EurobucketDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option is only used when creating new buckets. Use this option to change what region the data is stored in. Amazon charges slightly more for non-US buckets. Known bucket locations:
        ///{0}.
        /// </summary>
        internal static string S3LocationDescriptionLong {
            get {
                return ResourceManager.GetString("S3LocationDescriptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies S3 location constraints.
        /// </summary>
        internal static string S3LocationDescriptionShort {
            get {
                return ResourceManager.GetString("S3LocationDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subdomain calling option does nothing, the library will pick the right calling convention.
        /// </summary>
        internal static string S3NewStyleDeprecation {
            get {
                return ResourceManager.GetString("S3NewStyleDeprecation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify this argument to make the S3 backend use subdomains rather than the previous url prefix method. See the Amazon S3 documentation for more details..
        /// </summary>
        internal static string S3NewStyleDescriptionLong {
            get {
                return ResourceManager.GetString("S3NewStyleDescriptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use subdomain calling style.
        /// </summary>
        internal static string S3NewStyleDescriptionShort {
            get {
                return ResourceManager.GetString("S3NewStyleDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Companies other than Amazon are now supporting the S3 API, meaning that this backend can read and write data to those providers as well. Use this option to set the hostname. Currently known providers are:
        ///{0}.
        /// </summary>
        internal static string S3ServerNameDescriptionLong {
            get {
                return ResourceManager.GetString("S3ServerNameDescriptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies an alternate S3 server name.
        /// </summary>
        internal static string S3ServerNameDescriptionShort {
            get {
                return ResourceManager.GetString("S3ServerNameDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This flag toggles the use of the special RRS header. Files stored using RRS are more likely to disapear than those stored normally, but also costs less to store. See the full description here: http://aws.amazon.com/about-aws/whats-new/2010/05/19/announcing-amazon-s3-reduced-redundancy-storage/.
        /// </summary>
        internal static string S3UseRRSDescriptionLong {
            get {
                return ResourceManager.GetString("S3UseRRSDescriptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Reduced Redundancy Storage.
        /// </summary>
        internal static string S3UseRRSDescriptionShort {
            get {
                return ResourceManager.GetString("S3UseRRSDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine the bucket name for host: {0}.
        /// </summary>
        internal static string UnableToDecodeBucketnameError {
            get {
                return ResourceManager.GetString("UnableToDecodeBucketnameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse the url: {0}.
        /// </summary>
        internal static string UnableToParseURLError {
            get {
                return ResourceManager.GetString("UnableToParseURLError", resourceCulture);
            }
        }
    }
}
