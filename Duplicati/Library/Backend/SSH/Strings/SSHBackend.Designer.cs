//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Duplicati.Library.Backend.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SSHBackend {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SSHBackend() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Duplicati.Library.Backend.Strings.SSHBackend", typeof(SSHBackend).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login failed due to bad credentials, log: {0}.
        /// </summary>
        internal static string AuthenticationError {
            get {
                return ResourceManager.GetString("AuthenticationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout while closing session.
        /// </summary>
        internal static string CloseTimeoutError {
            get {
                return ResourceManager.GetString("CloseTimeoutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout occured while connecting, log: {0}.
        /// </summary>
        internal static string ConnectionTimeoutError {
            get {
                return ResourceManager.GetString("ConnectionTimeoutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create folder: {0}.
        /// </summary>
        internal static string CreateFolderError {
            get {
                return ResourceManager.GetString("CreateFolderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete complete.
        /// </summary>
        internal static string DebugDeleteFooter {
            get {
                return ResourceManager.GetString("DebugDeleteFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete start.
        /// </summary>
        internal static string DebugDeleteHeader {
            get {
                return ResourceManager.GetString("DebugDeleteHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get complete.
        /// </summary>
        internal static string DebugGetFooter {
            get {
                return ResourceManager.GetString("DebugGetFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get start.
        /// </summary>
        internal static string DebugGetHeader {
            get {
                return ResourceManager.GetString("DebugGetHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List complete.
        /// </summary>
        internal static string DebugListFooter {
            get {
                return ResourceManager.GetString("DebugListFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List start.
        /// </summary>
        internal static string DebugListHeader {
            get {
                return ResourceManager.GetString("DebugListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to parse line: {0}.
        /// </summary>
        internal static string DebugParseFailed {
            get {
                return ResourceManager.GetString("DebugParseFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Put complete.
        /// </summary>
        internal static string DebugPutFooter {
            get {
                return ResourceManager.GetString("DebugPutFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Put start.
        /// </summary>
        internal static string DebugPutHeader {
            get {
                return ResourceManager.GetString("DebugPutHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete file: {0}.
        /// </summary>
        internal static string DeleteError {
            get {
                return ResourceManager.GetString("DeleteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This backend can read and write data to an SSH based backend, using SFTP. Allowed formats are &quot;ssh://hostname/folder&quot; or &quot;ssh://username:password@hostname/folder&quot;..
        /// </summary>
        internal static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH backend relies on an external program (sftp) to work. Since the external program may change at any time, this may break the backend. Enable this option to get debug information about the ssh connection written to the console. Only used if the --use-sftp-application option is supplied..
        /// </summary>
        internal static string DescriptionDebugToConsoleLong {
            get {
                return ResourceManager.GetString("DescriptionDebugToConsoleLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prints debug info to the console.
        /// </summary>
        internal static string DescriptionDebugToConsoleShort {
            get {
                return ResourceManager.GetString("DescriptionDebugToConsoleShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password used to connect to the server. This may also be supplied as the environment variable &quot;FTP_PASSWORD&quot;..
        /// </summary>
        internal static string DescriptionFTPPasswordLong {
            get {
                return ResourceManager.GetString("DescriptionFTPPasswordLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplies the password used to connect to the server.
        /// </summary>
        internal static string DescriptionFTPPasswordShort {
            get {
                return ResourceManager.GetString("DescriptionFTPPasswordShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username used to connect to the server. This may also be supplied as the environment variable &quot;FTP_USERNAME&quot;..
        /// </summary>
        internal static string DescriptionFTPUsernameLong {
            get {
                return ResourceManager.GetString("DescriptionFTPUsernameLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplies the username used to connect to the server.
        /// </summary>
        internal static string DescriptionFTPUsernameShort {
            get {
                return ResourceManager.GetString("DescriptionFTPUsernameShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the &quot;sftp&quot; application. Only used if the --use-sftp-application option is supplied..
        /// </summary>
        internal static string DescriptionSFTPCommandLong {
            get {
                return ResourceManager.GetString("DescriptionSFTPCommandLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the &quot;sftp&quot; program.
        /// </summary>
        internal static string DescriptionSFTPCommandShort {
            get {
                return ResourceManager.GetString("DescriptionSFTPCommandShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Points to a valid OpenSSH keyfile. If the file is encrypted, the password supplied is used to decrypt the keyfile.  If this option is supplied, the password is not used to authenticate. This option only works when using the managed SSH client..
        /// </summary>
        internal static string DescriptionSshkeyfileLong {
            get {
                return ResourceManager.GetString("DescriptionSshkeyfileLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uses a SSH private key to authenticate.
        /// </summary>
        internal static string DescriptionSshkeyfileShort {
            get {
                return ResourceManager.GetString("DescriptionSshkeyfileShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable the use of the cd command. This is used to support SSH backends where the cd/pwd is broken. If this option is enabled all paths will be transmitted with full paths..
        /// </summary>
        internal static string DescriptionSshnocdLong {
            get {
                return ResourceManager.GetString("DescriptionSshnocdLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use the cd command.
        /// </summary>
        internal static string DescriptionSshnocdShort {
            get {
                return ResourceManager.GetString("DescriptionSshnocdShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supply any extra commandline arguments, which are passed unaltered to the ssh application.  Only used if the --use-sftp-application option is supplied..
        /// </summary>
        internal static string DescriptionSSHOptionsLong {
            get {
                return ResourceManager.GetString("DescriptionSSHOptionsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra options to the ssh commands.
        /// </summary>
        internal static string DescriptionSSHOptionsShort {
            get {
                return ResourceManager.GetString("DescriptionSSHOptionsShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH backend relies on an external program (sftp) to work. Since the external program may hang, Duplicati must use a timeout to detect a stall in the external program. Use this option to adjust the timeout. Minimum allowed value is one minute, maximum allowed is one hour. Only used if the --use-sftp-application option is supplied..
        /// </summary>
        internal static string DescriptionTransferTimeoutLong {
            get {
                return ResourceManager.GetString("DescriptionTransferTimeoutLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the timeout for transfering a file.
        /// </summary>
        internal static string DescriptionTransferTimeoutShort {
            get {
                return ResourceManager.GetString("DescriptionTransferTimeoutShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set this flag to use the sftp command from --sftp-command to communicate with the server. Setting this flag also requires that --disable-streaming-transfers is set.
        /// </summary>
        internal static string DescriptionUnmanagedLong {
            get {
                return ResourceManager.GetString("DescriptionUnmanagedLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use an external sftp application.
        /// </summary>
        internal static string DescriptionUnmanagedShort {
            get {
                return ResourceManager.GetString("DescriptionUnmanagedShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH based.
        /// </summary>
        internal static string DisplayName {
            get {
                return ResourceManager.GetString("DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout while downloading file.
        /// </summary>
        internal static string DownloadTimeoutError {
            get {
                return ResourceManager.GetString("DownloadTimeoutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder not found: {0}, log: {1}.
        /// </summary>
        internal static string FolderNotFoundError {
            get {
                return ResourceManager.GetString("FolderNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to set folder to {0}, error message: {1}.
        /// </summary>
        internal static string FolderNotFoundManagedError {
            get {
                return ResourceManager.GetString("FolderNotFoundManagedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to validate the remote directory: {0}.
        /// </summary>
        internal static string FolderVerificationError {
            get {
                return ResourceManager.GetString("FolderVerificationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The host is not authenticated, please connect to the host using SSH, and then re-rerun Duplicati, log: {0}.
        /// </summary>
        internal static string HostNotAuthenticatedError {
            get {
                return ResourceManager.GetString("HostNotAuthenticatedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File must have the OpenSSH private key header, eg: ---- BEGIN RSA PRIVATE KEY ----.
        /// </summary>
        internal static string IncorrectFileHeaderError {
            get {
                return ResourceManager.GetString("IncorrectFileHeaderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied keyfile was not found: {0}.
        /// </summary>
        internal static string KeyfileNotFoundError {
            get {
                return ResourceManager.GetString("KeyfileNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse content of the file. Please include the following information in a bug report (you may omit any key data present):
        ///{0}.
        /// </summary>
        internal static string KeyfileParseError {
            get {
                return ResourceManager.GetString("KeyfileParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start the SSH application ({0}).
        ///Make sure that &quot;expect&quot; is installed.
        ///Error message: {1}.
        /// </summary>
        internal static string LaunchErrorLinux {
            get {
                return ResourceManager.GetString("LaunchErrorLinux", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start the SSH application ({0}).
        ///Make sure that &quot;PuTTY&quot; is installed, and you have set the correct path.
        ///Error message: {1}.
        /// </summary>
        internal static string LaunchErrorWindows {
            get {
                return ResourceManager.GetString("LaunchErrorWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A password was expected, but passwordless login was specified.
        /// </summary>
        internal static string PasswordMissingError {
            get {
                return ResourceManager.GetString("PasswordMissingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH backend does not support streaming when using the unmanaged SSH backend, if you supply --use-sftp-application, you must also specify --disable-streaming-transfers.
        /// </summary>
        internal static string StreamingNotSupportedError {
            get {
                return ResourceManager.GetString("StreamingNotSupportedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error: {0}.
        /// </summary>
        internal static string UnexpectedConnectionError {
            get {
                return ResourceManager.GetString("UnexpectedConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got unexpected exit response.
        /// </summary>
        internal static string UnexpectedExitResponseError {
            get {
                return ResourceManager.GetString("UnexpectedExitResponseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get expected response to command: {0}.
        /// </summary>
        internal static string UnexpectedResponseError {
            get {
                return ResourceManager.GetString("UnexpectedResponseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported encryption format for OpenSSH private key, must be 3des-cbc (DES-EDE3-CBC).
        ///Please include this information in a bug report:
        ///{0}.
        /// </summary>
        internal static string UnsupportedKeyfileEncryptionError {
            get {
                return ResourceManager.GetString("UnsupportedKeyfileEncryptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout while uploading file.
        /// </summary>
        internal static string UploadTimeoutError {
            get {
                return ResourceManager.GetString("UploadTimeoutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A username was expected, but none was supplied.
        /// </summary>
        internal static string UsernameMissingError {
            get {
                return ResourceManager.GetString("UsernameMissingError", resourceCulture);
            }
        }
    }
}
