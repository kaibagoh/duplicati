//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Duplicati.Library.Backend.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SkyDrive {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SkyDrive() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Duplicati.Library.Backend.Strings.SkyDrive", typeof(SkyDrive).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This backend can read and write data to SkyDrive. Supported format is &quot;skydrive://folder/subfolder&quot;. Please note that there is no official API and accessing SkyDrive through this backend may violate the ToS and may stop to work if Microsoft decides to change the API..
        /// </summary>
        internal static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password used to connect to the server. This may also be supplied as the environment variable &quot;FTP_PASSWORD&quot;..
        /// </summary>
        internal static string DescriptionFTPPasswordLong {
            get {
                return ResourceManager.GetString("DescriptionFTPPasswordLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplies the password used to connect to the server.
        /// </summary>
        internal static string DescriptionFTPPasswordShort {
            get {
                return ResourceManager.GetString("DescriptionFTPPasswordShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username used to connect to the server. This may also be supplied as the environment variable &quot;FTP_USERNAME&quot;..
        /// </summary>
        internal static string DescriptionFTPUsernameLong {
            get {
                return ResourceManager.GetString("DescriptionFTPUsernameLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplies the username used to connect to the server.
        /// </summary>
        internal static string DescriptionFTPUsernameShort {
            get {
                return ResourceManager.GetString("DescriptionFTPUsernameShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option supplies the password used to authenticate with Passport, also known as Windows Live ID, MSN Account, SkyDrive and others.  This can also be supplied through the &quot;ftp-password&quot; property..
        /// </summary>
        internal static string DescriptionPassportPasswordLong {
            get {
                return ResourceManager.GetString("DescriptionPassportPasswordLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Microsoft Passport password.
        /// </summary>
        internal static string DescriptionPassportPasswordShort {
            get {
                return ResourceManager.GetString("DescriptionPassportPasswordShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option supplies the username used to authenticate with Passport, also known as Windows Live ID, MSN Account, SkyDrive and others.  This can also be supplied through the &quot;ftp-username&quot; property..
        /// </summary>
        internal static string DescriptionPassportUsernameLong {
            get {
                return ResourceManager.GetString("DescriptionPassportUsernameLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Microsoft Passport username.
        /// </summary>
        internal static string DescriptionPassportUsernameShort {
            get {
                return ResourceManager.GetString("DescriptionPassportUsernameShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SkyDrive.
        /// </summary>
        internal static string Displayname {
            get {
                return ResourceManager.GetString("Displayname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &quot;{0}&quot; was found, but it was readonly.
        /// </summary>
        internal static string FileIsReadOnlyError {
            get {
                return ResourceManager.GetString("FileIsReadOnlyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nonce returned was not recognized: {0}.
        /// </summary>
        internal static string InvalidNonceError {
            get {
                return ResourceManager.GetString("InvalidNonceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given url is invalid: {0}.
        /// </summary>
        internal static string InvalidUrlError {
            get {
                return ResourceManager.GetString("InvalidUrlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login failed with status: {0}.
        /// </summary>
        internal static string LoginFailedError {
            get {
                return ResourceManager.GetString("LoginFailedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder {0} was not found, message: {1}.
        /// </summary>
        internal static string MissingFolderError {
            get {
                return ResourceManager.GetString("MissingFolderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No password supplied for SkyDrive.
        /// </summary>
        internal static string MissingPasswordError {
            get {
                return ResourceManager.GetString("MissingPasswordError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No username supplied for SkyDrive.
        /// </summary>
        internal static string MissingUsernameError {
            get {
                return ResourceManager.GetString("MissingUsernameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No passport login urls found.
        /// </summary>
        internal static string NoPassportLoginUrls {
            get {
                return ResourceManager.GetString("NoPassportLoginUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request returned no login token.
        /// </summary>
        internal static string NoTokenError {
            get {
                return ResourceManager.GetString("NoTokenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to SkyDrive did not ask for authentification as expected.
        /// </summary>
        internal static string RequestDidNotRequireAuthentificationError {
            get {
                return ResourceManager.GetString("RequestDidNotRequireAuthentificationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested root folder &quot;{0}&quot; was not found. The following folders were found: {1}.
        /// </summary>
        internal static string RootFolderNotFoundError {
            get {
                return ResourceManager.GetString("RootFolderNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse the response and extract the CID.
        /// </summary>
        internal static string UnableToFindCIDError {
            get {
                return ResourceManager.GetString("UnableToFindCIDError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload of file {0} succeeded but no valid atom entry was returned.
        /// </summary>
        internal static string UploadFailedError {
            get {
                return ResourceManager.GetString("UploadFailedError", resourceCulture);
            }
        }
    }
}
